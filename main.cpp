#include <stdio.h>
#include <unistd.h>
#include <math.h>
#include<time.h>
#include "hal/gpio/gpio.h"
#include "hal/lcd/lcd.h"
const unsigned char ASCII6x8[][6] =
// !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_'abcdefghijklmnopqrstuvwxyz{|}~
{
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* ' ' 0 */
	{0x00, 0x00, 0x00, 0xF4, 0x00, 0x00}, /* '!' 1 */
	{0x00, 0x00, 0xE0, 0x00, 0xE0, 0x00}, /* '"' 2 */
	{0x00, 0x28, 0xFE, 0x28, 0xFE, 0x28}, /* '#' 3 */
	{0x00, 0x24, 0x54, 0xFE, 0x54, 0x48}, /* '$' 4 */
	{0x00, 0x46, 0x26, 0x10, 0xC8, 0xC4}, /* '%' 5 */
	{0x00, 0x6C, 0x92, 0xAA, 0x44, 0x0A}, /* '&' 6 */
	{0x00, 0x00, 0xA0, 0xC0, 0x00, 0x00}, /* ''' 7 */
	{0x00, 0x00, 0x38, 0x44, 0x82, 0x00}, /* '(' 8 */
	{0x00, 0x00, 0x82, 0x44, 0x38, 0x00}, /* ')' 9 */
	{0x00, 0x28, 0x10, 0x7C, 0x10, 0x28}, /* '*' 10 */
	{0x00, 0x10, 0x10, 0x7C, 0x10, 0x10}, /* '+' 11 */
	{0x00, 0x00, 0x00, 0x05, 0x06, 0x00}, /* ',' 12 */
	{0x00, 0x10, 0x10, 0x10, 0x10, 0x10}, /* '-' 13 */
	{0x00, 0x00, 0x06, 0x06, 0x00, 0x00}, /* '.' 14 */
	{0x00, 0x04, 0x08, 0x10, 0x20, 0x40}, /* '/' 15 */
	{0x00, 0x7C, 0x8A, 0x92, 0xA2, 0x7C}, /* '0' 16 */
	{0x00, 0x00, 0x42, 0xFE, 0x02, 0x00}, /* '1' 17 */
	{0x00, 0x42, 0x86, 0x8A, 0x92, 0x62}, /* '2' 18 */
	{0x00, 0x84, 0x82, 0xA2, 0xD2, 0x8C}, /* '3' 19 */
	{0x00, 0x18, 0x28, 0x48, 0xFE, 0x08}, /* '4' 20 */
	{0x00, 0xE4, 0xA2, 0xA2, 0xA2, 0x9C}, /* '5' 21 */
	{0x00, 0x3C, 0x52, 0x92, 0x92, 0x0C}, /* '6' 22 */
	{0x00, 0x80, 0x8E, 0x90, 0xA0, 0xC0}, /* '7' 23 */
	{0x00, 0x6C, 0x92, 0x92, 0x92, 0x6C}, /* '8' 24 */
	{0x00, 0x60, 0x92, 0x92, 0x94, 0x78}, /* '9' 25 */
	{0x00, 0x00, 0x6C, 0x6C, 0x00, 0x00}, /* ':' 26 */
	{0x00, 0x00, 0x6A, 0x6C, 0x00, 0x00}, /* ';' 27 */
	{0x00, 0x10, 0x28, 0x44, 0x82, 0x00}, /* '<' 28 */
	{0x00, 0x28, 0x28, 0x28, 0x28, 0x28}, /* '=' 29 */
	{0x00, 0x00, 0x82, 0x44, 0x28, 0x10}, /* '>' 30 */
	{0x00, 0x40, 0x80, 0x8A, 0x90, 0x60}, /* '?' 31 */
	{0x00, 0x4C, 0x92, 0x9A, 0x8A, 0x7C}, /* '@' 32 */
	{0x00, 0x3E, 0x48, 0x88, 0x48, 0x3E}, /* 'A' 33 */
	{0x00, 0xFE, 0x92, 0x92, 0x92, 0x6C}, /* 'B' 34 */
	{0x00, 0x7C, 0x82, 0x82, 0x82, 0x44}, /* 'C' 35 */
	{0x00, 0xFE, 0x82, 0x82, 0x44, 0x38}, /* 'D' 36 */
	{0x00, 0xFE, 0x92, 0x92, 0x92, 0x82}, /* 'E' 37 */
	{0x00, 0xFE, 0x90, 0x90, 0x90, 0x80}, /* 'F' 38 */
	{0x00, 0x7C, 0x82, 0x92, 0x92, 0x5E}, /* 'G' 39 */
	{0x00, 0xFE, 0x10, 0x10, 0x10, 0xFE}, /* 'H' 40 */
	{0x00, 0x00, 0x82, 0xFE, 0x82, 0x00}, /* 'I' 41 */
	{0x00, 0x04, 0x02, 0x82, 0xFC, 0x80}, /* 'J' 42 */
	{0x00, 0xFE, 0x10, 0x28, 0x44, 0x82}, /* 'K' 43 */
	{0x00, 0xFE, 0x02, 0x02, 0x02, 0x02}, /* 'L' 44 */
	{0x00, 0xFE, 0x40, 0x30, 0x40, 0xFE}, /* 'M' 45 */
	{0x00, 0xFE, 0x20, 0x10, 0x08, 0xFE}, /* 'N' 46 */
	{0x00, 0x7C, 0x82, 0x82, 0x82, 0x7C}, /* 'O' 47 */
	{0x00, 0xFE, 0x90, 0x90, 0x90, 0x60}, /* 'P' 48 */
	{0x00, 0x7C, 0x82, 0x8A, 0x84, 0x7A}, /* 'Q' 49 */
	{0x00, 0xFE, 0x90, 0x98, 0x94, 0x62}, /* 'R' 50 */
	{0x00, 0x62, 0x92, 0x92, 0x92, 0x8C}, /* 'S' 51 */
	{0x00, 0x80, 0x80, 0xFE, 0x80, 0x80}, /* 'T' 52 */
	{0x00, 0xFC, 0x02, 0x02, 0x02, 0xFC}, /* 'U' 53 */
	{0x00, 0xF8, 0x04, 0x02, 0x04, 0xF8}, /* 'V' 54 */
	{0x00, 0xFC, 0x02, 0x1C, 0x02, 0xFC}, /* 'W' 55 */
	{0x00, 0xC6, 0x28, 0x10, 0x28, 0xC6}, /* 'X' 56 */
	{0x00, 0xE0, 0x10, 0x0E, 0x10, 0xE0}, /* 'Y' 57 */
	{0x00, 0x86, 0x8A, 0x92, 0xA2, 0xC2}, /* 'Z' 58 */
	{0x00, 0x00, 0xFE, 0x82, 0x82, 0x00}, /* '[' 59 */
	{0x40, 0x20, 0x10, 0x08, 0x04, 0x02}, /* '\' 60 */
	{0x00, 0x00, 0x82, 0x82, 0xFE, 0x00}, /* ']' 61 */
	{0x00, 0x20, 0x40, 0x80, 0x40, 0x20}, /* '^' 62 */
	{0x00, 0x02, 0x02, 0x02, 0x02, 0x02}, /* '_' 63 */
	{0x00, 0x00, 0x80, 0x40, 0x20, 0x00}, /* '`' 64 */
	{0x00, 0x04, 0x2A, 0x2A, 0x2A, 0x1E}, /* 'a' 65 */
	{0x00, 0xFE, 0x12, 0x22, 0x22, 0x1C}, /* 'b' 66 */
	{0x00, 0x1C, 0x22, 0x22, 0x22, 0x04}, /* 'c' 67 */
	{0x00, 0x1C, 0x22, 0x22, 0x12, 0xFE}, /* 'd' 68 */
	{0x00, 0x1C, 0x2A, 0x2A, 0x2A, 0x18}, /* 'e' 69 */
	{0x00, 0x10, 0x7E, 0x90, 0x80, 0x40}, /* 'f' 70 */
	{0x00, 0x18, 0x25, 0x25, 0x25, 0x3E}, /* 'g' 71 */
	{0x00, 0xFE, 0x10, 0x20, 0x20, 0x1E}, /* 'h' 72 */
	{0x00, 0x00, 0x22, 0xBE, 0x02, 0x00}, /* 'i' 73 */
	{0x00, 0x02, 0x01, 0x21, 0xBE, 0x00}, /* 'j' 74 */
	{0x00, 0xFE, 0x08, 0x14, 0x22, 0x00}, /* 'k' 75 */
	{0x00, 0x00, 0x82, 0xFE, 0x02, 0x00}, /* 'l' 76 */
	{0x00, 0x3E, 0x20, 0x18, 0x20, 0x1E}, /* 'm' 77 */
	{0x00, 0x3E, 0x10, 0x20, 0x20, 0x1E}, /* 'n' 78 */
	{0x00, 0x1C, 0x22, 0x22, 0x22, 0x1C}, /* 'o' 79 */
	{0x00, 0x3F, 0x24, 0x24, 0x24, 0x18}, /* 'p' 80 */
	{0x00, 0x18, 0x24, 0x24, 0x18, 0x3F}, /* 'q' 81 */
	{0x00, 0x3E, 0x10, 0x20, 0x20, 0x10}, /* 'r' 82 */
	{0x00, 0x12, 0x2A, 0x2A, 0x2A, 0x04}, /* 's' 83 */
	{0x00, 0x20, 0xFC, 0x22, 0x02, 0x04}, /* 't' 84 */
	{0x00, 0x3C, 0x02, 0x02, 0x04, 0x3E}, /* 'u' 85 */
	{0x00, 0x38, 0x04, 0x02, 0x04, 0x38}, /* 'v' 86 */
	{0x00, 0x3C, 0x02, 0x0C, 0x02, 0x3C}, /* 'w' 87 */
	{0x00, 0x22, 0x14, 0x08, 0x14, 0x22}, /* 'x' 88 */
	{0x00, 0x38, 0x05, 0x05, 0x05, 0x3E}, /* 'y' 89 */
	{0x00, 0x22, 0x26, 0x2A, 0x32, 0x22}, /* 'z' 90 */
	{0x00, 0x10, 0x6C, 0x82, 0x00, 0x00}, /* '{' 91 */
	{0x00, 0x00, 0x00, 0xFE, 0x00, 0x00}, /* '|' 92 */
	{0x00, 0x00, 0x00, 0x82, 0x6C, 0x10}, /* '}' 93 */
	{0x00, 0x10, 0x20, 0x10, 0x08, 0x10}, /* '~' 94 */
};
const unsigned char ASCII8x16[][16] = {
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* ' ' 0 */
	{0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00}, /* '!' 1 */
	{0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* '"' 2 */
	{0x00, 0x04, 0x07, 0x3C, 0x04, 0x07, 0x3C, 0x04, 0x10, 0x1E, 0xF0, 0x10, 0x1E, 0xF0, 0x10, 0x00}, /* '#' 3 */
	{0x00, 0x1C, 0x22, 0x21, 0x7F, 0x20, 0x20, 0x18, 0x00, 0x18, 0x04, 0x04, 0xFE, 0x84, 0x44, 0x38}, /* '$' 4 */
	{0x00, 0x1C, 0x22, 0x22, 0x1D, 0x06, 0x08, 0x30, 0x00, 0x18, 0x20, 0xC0, 0x38, 0x44, 0x44, 0x38}, /* '%' 5 */
	{0x00, 0x00, 0x1C, 0x23, 0x23, 0x1C, 0x00, 0x01, 0x00, 0x78, 0x84, 0x04, 0x04, 0xC8, 0x30, 0xCC}, /* '&' 6 */
	{0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* ''' 7 */
	{0x00, 0x00, 0x07, 0x18, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x18, 0x04, 0x02, 0x00, 0x00}, /* '(' 8 */
	{0x00, 0x00, 0x40, 0x20, 0x18, 0x07, 0x00, 0x00, 0x00, 0x00, 0x02, 0x04, 0x18, 0xE0, 0x00, 0x00}, /* ')' 9 */
	{0x00, 0x02, 0x01, 0x07, 0x01, 0x02, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x80, 0x40, 0x00, 0x00}, /* '*' 10 */
	{0x00, 0x01, 0x01, 0x01, 0x0F, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00}, /* '+' 11 */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0C, 0x00, 0x00, 0x00}, /* ',' 12 */
	{0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* '-' 13 */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00}, /* '.' 14 */
	{0x00, 0x00, 0x00, 0x00, 0x03, 0x0C, 0x30, 0x00, 0x00, 0x0C, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00}, /* '/' 15 */
	{0x00, 0x0F, 0x10, 0x20, 0x21, 0x22, 0x14, 0x0F, 0x00, 0xF0, 0x28, 0x44, 0x84, 0x04, 0x08, 0xF0}, /* '0' 16 */
	{0x00, 0x00, 0x10, 0x10, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00}, /* '1' 17 */
	{0x00, 0x18, 0x20, 0x20, 0x20, 0x21, 0x1E, 0x00, 0x00, 0x1C, 0x24, 0x44, 0x84, 0x04, 0x04, 0x00}, /* '2' 18 */
	{0x00, 0x18, 0x21, 0x21, 0x21, 0x21, 0x1E, 0x00, 0x00, 0x18, 0x04, 0x04, 0x04, 0x04, 0xF8, 0x00}, /* '3' 19 */
	{0x00, 0x00, 0x00, 0x03, 0x0C, 0x30, 0x3F, 0x00, 0x00, 0x20, 0xE0, 0x20, 0x20, 0x20, 0xFC, 0x20}, /* '4' 20 */
	{0x00, 0x3F, 0x22, 0x22, 0x22, 0x22, 0x21, 0x00, 0x00, 0x18, 0x04, 0x04, 0x04, 0x04, 0xF8, 0x00}, /* '5' 21 */
	{0x00, 0x1F, 0x21, 0x21, 0x21, 0x21, 0x18, 0x00, 0x00, 0xF8, 0x04, 0x04, 0x04, 0x04, 0xF8, 0x00}, /* '6' 22 */
	{0x00, 0x20, 0x20, 0x20, 0x23, 0x2C, 0x30, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x80, 0x00, 0x00, 0x00}, /* '7' 23 */
	{0x00, 0x1E, 0x21, 0x21, 0x21, 0x21, 0x1E, 0x00, 0x00, 0xF8, 0x04, 0x04, 0x04, 0x04, 0xF8, 0x00}, /* '8' 24 */
	{0x00, 0x1F, 0x20, 0x20, 0x20, 0x20, 0x1F, 0x00, 0x00, 0x18, 0x84, 0x84, 0x84, 0x84, 0xF8, 0x00}, /* '9' 25 */
	{0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00}, /* ':' 26 */
	{0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x38, 0x00, 0x00, 0x00}, /* ';' 27 */
	{0x01, 0x02, 0x02, 0x04, 0x08, 0x08, 0x10, 0x00, 0x00, 0x80, 0x80, 0x40, 0x20, 0x20, 0x10, 0x00}, /* '<' 28 */
	{0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40}, /* '=' 29 */
	{0x00, 0x10, 0x08, 0x08, 0x04, 0x02, 0x02, 0x01, 0x00, 0x10, 0x20, 0x20, 0x40, 0x80, 0x80, 0x00}, /* '>' 30 */
	{0x00, 0x0C, 0x10, 0x20, 0x20, 0x21, 0x12, 0x0C, 0x00, 0x00, 0x00, 0x00, 0xEC, 0x00, 0x00, 0x00}, /* '?' 31 */
	{0x00, 0x0F, 0x10, 0x23, 0x24, 0x27, 0x10, 0x0F, 0x00, 0xF0, 0x08, 0xC4, 0x24, 0xC4, 0x24, 0xE8}, /* '@' 32 */
	{0x00, 0x00, 0x00, 0x07, 0x38, 0x07, 0x00, 0x00, 0x00, 0x1C, 0xE0, 0x20, 0x20, 0x20, 0xE0, 0x1C}, /* 'A' 33 */
	{0x00, 0x3F, 0x21, 0x21, 0x21, 0x21, 0x12, 0x0C, 0x00, 0xFC, 0x04, 0x04, 0x04, 0x04, 0x88, 0x70}, /* 'B' 34 */
	{0x00, 0x0F, 0x10, 0x20, 0x20, 0x20, 0x10, 0x0C, 0x00, 0xF0, 0x08, 0x04, 0x04, 0x04, 0x08, 0x30}, /* 'C' 35 */
	{0x00, 0x3F, 0x20, 0x20, 0x20, 0x20, 0x18, 0x07, 0x00, 0xFC, 0x04, 0x04, 0x04, 0x04, 0x18, 0xE0}, /* 'D' 36 */
	{0x00, 0x3F, 0x21, 0x21, 0x21, 0x21, 0x21, 0x20, 0x00, 0xFC, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04}, /* 'E' 37 */
	{0x00, 0x3F, 0x21, 0x21, 0x21, 0x21, 0x21, 0x20, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* 'F' 38 */
	{0x00, 0x0F, 0x10, 0x20, 0x20, 0x20, 0x10, 0x08, 0x00, 0xF0, 0x08, 0x04, 0x04, 0x84, 0x88, 0xFC}, /* 'G' 39 */
	{0x00, 0x3F, 0x01, 0x01, 0x01, 0x01, 0x01, 0x3F, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC}, /* 'H' 40 */
	{0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00}, /* 'I' 41 */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x18, 0x04, 0x04, 0x04, 0xF8, 0x00, 0x00}, /* 'J' 42 */
	{0x00, 0x3F, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0xFC, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04}, /* 'K' 43 */
	{0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00}, /* 'L' 44 */
	{0x00, 0x3F, 0x0C, 0x03, 0x00, 0x03, 0x0C, 0x3F, 0x00, 0xFC, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xFC}, /* 'M' 45 */
	{0x00, 0x3F, 0x18, 0x06, 0x01, 0x00, 0x00, 0x3F, 0x00, 0xFC, 0x00, 0x00, 0x80, 0x60, 0x18, 0xFC}, /* 'N' 46 */
	{0x00, 0x0F, 0x10, 0x20, 0x20, 0x20, 0x10, 0x0F, 0x00, 0xF0, 0x08, 0x04, 0x04, 0x04, 0x08, 0xF0}, /* 'O' 47 */
	{0x00, 0x3F, 0x20, 0x20, 0x20, 0x20, 0x11, 0x0E, 0x00, 0xFC, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00}, /* 'P' 48 */
	{0x00, 0x0F, 0x10, 0x20, 0x20, 0x20, 0x10, 0x0F, 0x00, 0xF0, 0x08, 0x04, 0x04, 0x14, 0x08, 0xF4}, /* 'Q' 49 */
	{0x00, 0x3F, 0x20, 0x20, 0x20, 0x20, 0x11, 0x0E, 0x00, 0xFC, 0x80, 0x80, 0x80, 0x80, 0x40, 0x3C}, /* 'R' 50 */
	{0x00, 0x1C, 0x22, 0x21, 0x21, 0x20, 0x20, 0x18, 0x00, 0x18, 0x04, 0x04, 0x04, 0x84, 0x44, 0x38}, /* 'S' 51 */
	{0x00, 0x20, 0x20, 0x20, 0x3F, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00}, /* 'T' 52 */
	{0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0xF8, 0x04, 0x04, 0x04, 0x04, 0x04, 0xF8}, /* 'U' 53 */
	{0x00, 0x38, 0x07, 0x00, 0x00, 0x00, 0x07, 0x38, 0x00, 0x00, 0x00, 0xE0, 0x1C, 0xE0, 0x00, 0x00}, /* 'V' 54 */
	{0x00, 0x3F, 0x00, 0x01, 0x3E, 0x01, 0x00, 0x3F, 0x00, 0xC0, 0x3C, 0xC0, 0x00, 0xC0, 0x3C, 0xC0}, /* 'W' 55 */
	{0x00, 0x30, 0x0C, 0x02, 0x01, 0x02, 0x0C, 0x30, 0x00, 0x0C, 0x30, 0xC0, 0x00, 0xC0, 0x30, 0x0C}, /* 'X' 56 */
	{0x00, 0x30, 0x0C, 0x03, 0x00, 0x03, 0x0C, 0x30, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00}, /* 'Y' 57 */
	{0x00, 0x20, 0x20, 0x20, 0x23, 0x2C, 0x30, 0x00, 0x00, 0x0C, 0x34, 0xC4, 0x04, 0x04, 0x04, 0x00}, /* 'Z' 58 */
	{0x00, 0x00, 0x00, 0x7F, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x02, 0x02, 0x02, 0x00}, /* '[' 59 */
	{0x60, 0x18, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x18, 0x06, 0x00}, /* '\' 60 */
	{0x00, 0x40, 0x40, 0x40, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0xFE, 0x00, 0x00, 0x00}, /* ']' 61 */
	{0x00, 0x00, 0x10, 0x20, 0x40, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* '^' 62 */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02}, /* '_' 63 */
	{0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* '`' 64 */
	{0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00, 0x38, 0x44, 0x44, 0x44, 0x44, 0xF8, 0x04}, /* 'a' 65 */
	{0x00, 0x3F, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00, 0xFC, 0x08, 0x04, 0x04, 0x04, 0x08, 0xF0}, /* 'b' 66 */
	{0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x01, 0x00, 0xF0, 0x08, 0x04, 0x04, 0x04, 0x04, 0x08}, /* 'c' 67 */
	{0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x3F, 0x00, 0xF0, 0x08, 0x04, 0x04, 0x04, 0x08, 0xFC}, /* 'd' 68 */
	{0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00, 0xF0, 0x48, 0x44, 0x44, 0x44, 0x44, 0xC8}, /* 'e' 69 */
	{0x00, 0x02, 0x02, 0x1F, 0x22, 0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00}, /* 'f' 70 */
	{0x00, 0x00, 0x01, 0x02, 0x02, 0x01, 0x03, 0x00, 0x00, 0xE4, 0x12, 0x0A, 0x0A, 0x12, 0xFC, 0x00}, /* 'g' 71 */
	{0x00, 0x3F, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00}, /* 'h' 72 */
	{0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00}, /* 'i' 73 */
	{0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0xFC, 0x00, 0x00, 0x00}, /* 'j' 74 */
	{0x00, 0x3F, 0x00, 0x00, 0x01, 0x02, 0x04, 0x00, 0x00, 0xFC, 0x40, 0xA0, 0x10, 0x08, 0x04, 0x00}, /* 'k' 75 */
	{0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00}, /* 'l' 76 */
	{0x00, 0x03, 0x02, 0x02, 0x01, 0x02, 0x02, 0x01, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC}, /* 'm' 77 */
	{0x00, 0x03, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00}, /* 'n' 78 */
	{0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00, 0xF0, 0x08, 0x04, 0x04, 0x04, 0x08, 0xF0}, /* 'o' 79 */
	{0x00, 0x03, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00, 0xFE, 0x10, 0x08, 0x08, 0x08, 0x10, 0xE0}, /* 'p' 80 */
	{0x00, 0x00, 0x01, 0x02, 0x02, 0x02, 0x01, 0x03, 0x00, 0xE0, 0x10, 0x08, 0x08, 0x08, 0x10, 0xFE}, /* 'q' 81 */
	{0x00, 0x00, 0x03, 0x01, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00}, /* 'r' 82 */
	{0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00, 0x88, 0x44, 0x44, 0x24, 0x24, 0x18, 0x00}, /* 's' 83 */
	{0x00, 0x02, 0x02, 0x3F, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x04, 0x04, 0x04, 0x00}, /* 't' 84 */
	{0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0xF8, 0x04, 0x04, 0x04, 0x04, 0xFC, 0x00}, /* 'u' 85 */
	{0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0xC0, 0x30, 0x0C, 0x30, 0xC0, 0x00}, /* 'v' 86 */
	{0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x03, 0x00, 0xE0, 0x1C, 0x30, 0xC0, 0x30, 0x1C, 0xE0}, /* 'w' 87 */
	{0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x04, 0x08, 0x90, 0x60, 0x90, 0x08, 0x04}, /* 'x' 88 */
	{0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x02, 0xC2, 0x32, 0x0C, 0x30, 0xC0, 0x00}, /* 'y' 89 */
	{0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x00, 0x00, 0x0C, 0x14, 0x24, 0x44, 0x84, 0x04, 0x00}, /* 'z' 90 */
	{0x00, 0x00, 0x01, 0x01, 0x3E, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x02, 0x02, 0x00}, /* '{' 91 */
	{0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00}, /* '|' 92 */
	{0x00, 0x40, 0x40, 0x3E, 0x01, 0x01, 0x00, 0x00, 0x00, 0x02, 0x02, 0xFC, 0x00, 0x00, 0x00, 0x00}, /* '}' 93 */
	{0x00, 0x01, 0x02, 0x02, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* '~' 94 */
};

const unsigned char Number12x24[][36] = {
	{0x00, 0x01, 0x07, 0x0F, 0x1C, 0x18, 0x18, 0x18, 0x1C, 0x0F, 0x07, 0x01, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x80, 0xE0, 0xF0, 0x38, 0x18, 0x18, 0x18, 0x38, 0xF0, 0xE0, 0x80}, /* '0' 0 */
	{0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x00}, /* '1' 1 */
	{0x00, 0x07, 0x0F, 0x1C, 0x18, 0x18, 0x18, 0x18, 0x1C, 0x0F, 0x07, 0x00, 0x00, 0x80, 0x81, 0x03, 0x07, 0x0E, 0x1C, 0x38, 0xF0, 0xE0, 0x80, 0x00, 0x00, 0x78, 0xF8, 0xE0, 0x60, 0x70, 0x38, 0x18, 0x18, 0xF8, 0xF8, 0x00}, /* '2' 2 */
	{0x00, 0x1F, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x1B, 0x1F, 0x1E, 0x18, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x70, 0xF0, 0xD8, 0x9C, 0x0F, 0x07, 0x00, 0x00, 0xE0, 0xF0, 0x38, 0x18, 0x18, 0x18, 0x18, 0x38, 0xF0, 0xE0, 0x00}, /* '3' 3 */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1C, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x3D, 0xF1, 0xC1, 0x01, 0x01, 0xFF, 0xFF, 0x01, 0x01, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x98, 0x98, 0xF8, 0xF8, 0x98, 0x98}, /* '4' 4 */
	{0x00, 0x00, 0x1F, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x30, 0x30, 0x30, 0x30, 0x38, 0x1F, 0x0F, 0x00, 0x00, 0xE0, 0xF0, 0x38, 0x18, 0x18, 0x18, 0x18, 0x38, 0xF0, 0xE0, 0x00}, /* '5' 5 */
	{0x00, 0x07, 0x0F, 0x1C, 0x18, 0x18, 0x18, 0x18, 0x1C, 0x0F, 0x07, 0x00, 0x00, 0xFF, 0xFF, 0x18, 0x30, 0x30, 0x30, 0x30, 0x38, 0x1F, 0x0F, 0x00, 0x00, 0xE0, 0xF0, 0x38, 0x18, 0x18, 0x18, 0x18, 0x38, 0xF0, 0xE0, 0x00}, /* '6' 6 */
	{0x00, 0x1F, 0x1F, 0x0C, 0x0C, 0x0C, 0x0E, 0x06, 0x07, 0x1F, 0x1C, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x0F, 0x7F, 0xF0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00}, /* '7' 7 */
	{0x00, 0x07, 0x0F, 0x1C, 0x18, 0x18, 0x18, 0x18, 0x1C, 0x0F, 0x07, 0x00, 0x00, 0xC7, 0xEF, 0x78, 0x30, 0x30, 0x30, 0x30, 0x78, 0xEF, 0xC7, 0x00, 0x00, 0xE0, 0xF0, 0x38, 0x18, 0x18, 0x18, 0x18, 0x38, 0xF0, 0xE0, 0x00}, /* '8' 8 */
	{0x00, 0x07, 0x0F, 0x1C, 0x18, 0x18, 0x18, 0x18, 0x1C, 0x0F, 0x07, 0x00, 0x00, 0xF0, 0xF8, 0x1C, 0x0C, 0x0C, 0x0C, 0x0C, 0x18, 0xFF, 0xFF, 0x00, 0x00, 0xE0, 0xF0, 0x38, 0x18, 0x18, 0x18, 0x18, 0x38, 0xF0, 0xE0, 0x00}, /* '9' 9 */
	{0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00}, /* ':' 10 */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* ' ' 11 */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* '-' 12 */
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x18, 0x00, 0x00, 0x00, 0x00}, /* '.' 13 */
};

int pos_hx[12];
int pos_hy[12];

int pos_mx[60];
int pos_my[60];

int pos_sx[60];
int pos_sy[60];

static int system_init()
{
	int retVal = -1;
	Lcd &lcd = Lcd::instance();
	if (lcd.init()) {
		lcd.draw_h_line(0, 96, 0, Lcd::E_WHITE);
		lcd.draw_h_line(0, 96, 96, Lcd::E_WHITE);

		lcd.draw_v_line(0, 1, 96, Lcd::E_WHITE);
		lcd.draw_v_line(95, 1, 96, Lcd::E_WHITE);
		retVal = 0;
	}

	for (int i = 0; i < 60; i++) {
		pos_sx[i] = 47 + sin(i * 6) * 46;
		pos_sy[i] = 47 - cos(i * 6) * 46;
	}
	return retVal;
}

int main(int argc, const char *argv[])
{
	int ret = system_init();
	if (ret == 0) {
		Lcd &lcd = Lcd::instance();
		while (true) {
			time_t t;
			time(&t);
			struct tm *t1;
			t1=localtime(&t);
			lcd.draw_line(47, 47, pos_sx[t1->tm_sec], pos_sy[t1->tm_sec], Lcd::E_WHITE);
			int x = 16, y = 7;
			lcd.set_ram(x, y, 12, Number12x24[t1->tm_hour / 10], 36);
			x += 12;
			lcd.set_ram(x, y, 12, Number12x24[t1->tm_hour % 10], 36);
			x += 12;
			if (t1->tm_sec % 2) {
				lcd.set_ram(x, y, 12, Number12x24[10], 36);
			} else {
				lcd.set_ram(x, y, 12, Number12x24[11], 36);
			}
			x += 12;
			lcd.set_ram(x, y, 12, Number12x24[t1->tm_min / 10], 36);
			x += 12;
			lcd.set_ram(x, y, 12, Number12x24[t1->tm_min % 10], 36);

			lcd.sync();
			usleep(500000);
		}
	} else {
		printf("system init failed\n");
	}

	return ret;
}
